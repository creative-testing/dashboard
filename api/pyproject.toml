[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "creative-testing-saas-api"
version = "0.1.0"
description = "Backend API pour Creative Testing SaaS"
requires-python = ">=3.10"
dependencies = [
    "fastapi>=0.114.0",
    "uvicorn[standard]>=0.30.0",
    "python-multipart>=0.0.6",
    # Database
    "sqlalchemy>=2.0.25",
    "alembic>=1.13.1",
    "psycopg[binary,pool]>=3.1",
    # Auth & Security
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "cryptography>=42.0.0",
    "python-dotenv>=1.0.0",
    # OAuth
    "authlib>=1.3.0",
    "httpx>=0.27.0",
    # Stripe
    "stripe>=10.0.0",
    # Redis & Jobs
    "redis>=5.0.1",
    "rq>=1.16.1",
    # Storage
    "boto3>=1.34.22",
    # Utils
    "pydantic>=2.7.0",
    "pydantic-settings>=2.3.0",
    "python-dateutil>=2.8.2",
    # Monitoring
    "sentry-sdk[fastapi]>=1.39.2",
    # Réutilise dependencies du parent (requests, pytz déjà dans ../requirements.txt)
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0",
    "pytest-asyncio>=0.23",
    "pytest-cov>=4.1",
    "mypy>=1.10",
    "ruff>=0.5",
    "black>=24.0",
    "pre-commit>=3.5",
    "httpx",  # for testing
]

[tool.setuptools.packages.find]
where = ["."]
include = ["app*"]

[tool.ruff]
line-length = 100
target-version = "py310"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
line-length = 100
target-version = ["py310"]
include = '\.pyi?$'

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
plugins = ["pydantic.mypy"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-ra -q --cov=app --cov-report=term-missing"

[tool.coverage.run]
source = ["app"]
omit = ["*/tests/*", "*/__pycache__/*"]
