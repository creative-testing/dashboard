version: "3.9"

services:
  # PostgreSQL 16 avec RLS (Row Level Security) activé
  db:
    image: postgres:16
    container_name: creative-testing-db
    environment:
      POSTGRES_DB: creative_testing_saas
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev
    ports:
      - "5432:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init.sql
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"  # Pour réplication si nécessaire
      - "-c"
      - "log_statement=all"  # Debug SQL en dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev -d creative_testing_saas"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis pour les jobs background (fetch + transform)
  redis:
    image: redis:7-alpine
    container_name: creative-testing-redis
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  # Adminer (interface DB optionnelle, seulement en dev)
  adminer:
    image: adminer:latest
    container_name: creative-testing-adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: db
    depends_on:
      - db
    profiles:
      - dev  # Lance seulement avec: docker-compose --profile dev up

volumes:
  dbdata:
  redisdata:

networks:
  default:
    name: creative-testing-network
